{"version":3,"sources":["store/reducers/calendar/types.tsx","hooks/useTypeSelector.tsx","api/CalendarService.tsx","store/reducers/calendar/calendarActionCreators.tsx","store/reducers/AllActionsCreators.tsx","pages/eventCalendar.tsx","hooks/useActions.tsx","utls/formatDate.tsx","App.tsx","store/reducers/calendar/index.tsx","store/reducers/index.tsx","store/index.tsx","index.tsx"],"names":["CalendarActionsEnum","useTypeSelector","useSelector","instance","axios","create","baseURL","CalendarService","get","CalendarActionCreators","setEvents","events","type","SET_EVENTS","payload","setIsLoading","isLoading","SET_IS_LOADING","fetchEvents","dispatch","a","getEvents","response","data","console","error","AllActionsCreators","EventCalendar","state","calendar","useState","isVisible","setIsVisible","chosenEvent","setChosenEvent","useDispatch","bindActionCreators","useActions","useEffect","handleOk","className","dateCellRender","value","formatedDate","date","year","getFullYear","month","getMonth","day","getDate","formatDate","toDate","currentDayEvents","filter","item","date_start","map","event","onClick","e","id","currentTarget","getAttribute","log","find","showModal","competition","title","footer","visible","onOk","onCancel","column","Item","label","city","status","date_finish","regulation","target","href","justify","App","Content","initialState","action","rootReducer","combineReducers","reducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aa475b1e.chunk.js","sourcesContent":["import {IEvent} from \"../../../models/eventModel\";\n\n\nexport interface CalendarState {\n    events: IEvent[],\n    isLoading: boolean\n}\n\nexport enum CalendarActionsEnum {\n    SET_EVENTS = 'SET_EVENTS',\n    SET_IS_LOADING = 'SET_IS_LOADING'\n}\n\nexport interface setEventsAction {\n    type: CalendarActionsEnum.SET_EVENTS,\n    payload: IEvent[],\n}\n\nexport interface setIsLoadingAction {\n    type: CalendarActionsEnum.SET_IS_LOADING,\n    payload: boolean\n}\n\nexport type CalendarAction = setEventsAction | setIsLoadingAction\n","import {TypedUseSelectorHook, useSelector} from \"react-redux\";\nimport {RootState} from \"../store\";\n\nexport const useTypeSelector: TypedUseSelectorHook<RootState> = useSelector","import axios, {AxiosResponse} from \"axios\";\nimport {IEvent} from \"../models/eventModel\";\n\nconst instance = axios.create({\n    //baseURL: 'http://127.0.0.1:8000/api/',\n    baseURL: 'https://xn--90aa5bhn.xn--p1ai/api/',\n})\n\nexport class CalendarService {\n    static async getEvents(): Promise<AxiosResponse<IEvent[]>> {\n        return instance.get<IEvent[]>('calendar/')\n    }\n}\n","import {IEvent} from \"../../../models/eventModel\";\nimport {CalendarAction, CalendarActionsEnum} from \"./types\";\nimport {AppDispatch} from \"../../index\";\nimport {CalendarService} from \"../../../api/CalendarService\";\n\nexport const CalendarActionCreators = {\n    setEvents: (events: IEvent[]): CalendarAction => ({type: CalendarActionsEnum.SET_EVENTS, payload: events}),\n    setIsLoading: (isLoading: boolean): CalendarAction => ({\n        type: CalendarActionsEnum.SET_IS_LOADING,\n        payload: isLoading\n    }),\n    fetchEvents: () => async (dispatch: AppDispatch) => {\n        try {\n            dispatch(CalendarActionCreators.setIsLoading(true))\n            const response = await CalendarService.getEvents()\n            const events = response.data\n            dispatch(CalendarActionCreators.setEvents(events))\n            dispatch(CalendarActionCreators.setIsLoading(false))\n\n        } catch (e) {\n            console.error(e)\n        }\n    }\n}\n","import {CalendarActionCreators} from \"./calendar/calendarActionCreators\";\n\n\nexport const AllActionsCreators = {\n    ...CalendarActionCreators\n}\n","import React, {FC, useEffect, useState} from 'react';\nimport {Row, Calendar, Modal, Button, Descriptions, Spin} from \"antd\";\nimport {Moment} from \"moment\";\nimport {formatDate} from \"../utls/formatDate\";\nimport {useTypeSelector} from \"../hooks/useTypeSelector\";\nimport {IEvent} from \"../models/eventModel\";\nimport {useActions} from \"../hooks/useActions\";\n\nconst EventCalendar: FC = () => {\n    const {events, isLoading} = useTypeSelector(state => state.calendar)\n    const [isVisible, setIsVisible] = useState(false)\n    const [chosenEvent, setChosenEvent] = useState({} as IEvent | undefined)\n    const {fetchEvents} = useActions()\n\n    useEffect(() => {\n        fetchEvents()\n    }, [])\n\n    const showModal = (e: React.MouseEvent<HTMLLIElement>) => {\n        const id = e.currentTarget.getAttribute('data-id')!\n        console.log(events)\n        const event = events.find(item => item.id === +id)\n        setChosenEvent(event)\n        console.log(event)\n        setIsVisible(true)\n    }\n\n    const handleOk = () => {\n        setIsVisible(false);\n    };\n\n    const handleCancel = () => {\n        setIsVisible(false);\n    };\n\n    function dateCellRender(value: Moment) {\n        const formatedDate = formatDate(value.toDate());\n        const currentDayEvents = events.filter(item => item.date_start === formatedDate)\n        return (\n            <div>\n                {currentDayEvents.map(event => (\n                    <li onClick={e => showModal(e)} data-id={event.id} key={event.id}>\n                        <span className=\"ant-badge ant-badge-status ant-badge-not-a-wrapper\">\n                            <span className=\"ant-badge-status-dot ant-badge-status-success\"></span>\n                            <span className=\"ant-badge-status-text\">{event.competition}</span>\n                        </span>\n                    </li>\n                ))}\n            </div>\n        );\n    }\n\n\n    return (\n        <>{isLoading ?\n            <div className=\"example\">\n                <Spin/>\n            </div> :\n            <>\n                <Calendar dateCellRender={dateCellRender}/>\n\n                <Modal title={chosenEvent?.competition} footer={null} visible={isVisible} onOk={handleOk}\n                       onCancel={handleCancel}>\n                    <Descriptions column={1}>\n                        <Descriptions.Item label=\"Город\">{chosenEvent?.city}</Descriptions.Item>\n                        {chosenEvent?.status &&\n                        <Descriptions.Item label=\"Статус соревнований\">{chosenEvent.status}</Descriptions.Item>\n                        }\n                        <Descriptions.Item label=\"Дата начала\">{chosenEvent?.date_start}</Descriptions.Item>\n                        <Descriptions.Item label=\"Дата окончания\">{chosenEvent?.date_finish}</Descriptions.Item>\n                        {chosenEvent?.regulation && <Descriptions.Item label=\"Регламент\">\n                            <a target='_blank' href={chosenEvent.regulation}>Регламент</a>\n                        </Descriptions.Item>\n                        }\n                    </Descriptions>\n                    <Row justify='end'>\n                        <Button onClick={handleOk} type=\"primary\">Ok</Button>\n                    </Row>\n                </Modal>\n            </>\n        }\n        </>\n    );\n};\n\nexport default EventCalendar;","import {useDispatch} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {AllActionsCreators} from \"../store/reducers/AllActionsCreators\";\n\n\nexport const useActions = () => {\n    const dispatch = useDispatch()\n    return bindActionCreators(AllActionsCreators, dispatch)\n}\n","\n\nexport const formatDate = (date: Date): string => {\n    const year = date.getFullYear()\n    const month = date.getMonth() < 10 ? `0${date.getMonth() + 1}` : date.getMonth() + 1\n    const day = date.getDate() < 10 ? `0${date.getDate()}` : date.getDate()\n    return `${day}.${month}.${year}`\n}\n","import React, {FC} from 'react';\nimport './App.css';\nimport EventCalendar from \"./pages/eventCalendar\";\nimport {Layout} from \"antd\";\n\nconst App: FC = () => {\n  return (\n    <Layout>\n        <Layout.Content>\n            <EventCalendar />\n        </Layout.Content>\n    </Layout>\n  );\n}\n\nexport default App;\n","import {CalendarAction, CalendarActionsEnum, CalendarState} from \"./types\";\n\nconst initialState: CalendarState = {\n    events: [],\n    isLoading: false\n}\n\nexport default function (state = initialState, action: CalendarAction): CalendarState {\n    switch (action.type) {\n        case CalendarActionsEnum.SET_EVENTS:\n            return {...state, events: action.payload}\n        case CalendarActionsEnum.SET_IS_LOADING:\n            return {...state, isLoading: action.payload}\n        default:\n            return state\n    }\n}\n","import calendar from './calendar'\n\nexport default {\n    calendar,\n}\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport reducers from './reducers';\nimport thunk from 'redux-thunk';\n\n\nconst rootReducer = combineReducers(reducers)\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type  AppDispatch = typeof store.dispatch\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {store} from \"./store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}